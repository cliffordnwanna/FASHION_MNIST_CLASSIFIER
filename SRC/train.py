# -*- coding: utf-8 -*-
"""train.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18MvOgybe2ZZBao8QlQ59Ce6o_dG7bc1F
"""

import numpy as np
import matplotlib.pyplot as plt
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.datasets import fashion_mnist
from tensorflow.keras.utils import to_categorical

# Load the Fashion MNIST dataset
(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()

# Preprocess the data
train_images = train_images.reshape(-1, 28, 28, 1) / 255.0
test_images = test_images.reshape(-1, 28, 28, 1) / 255.0

train_labels_categ = to_categorical(train_labels, 10)
test_labels_categ = to_categorical(test_labels, 10)

# Define the neural network model
model = Sequential([
    Flatten(input_shape=(28, 28, 1)),
    Dense(128, activation='relu'),
    Dense(10, activation='softmax')
])

# Compile the model
model.compile(optimizer='adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])

# Train the model
model.fit(train_images, train_labels_categ, epochs=10, batch_size=128, validation_split=0.2)

# Save the trained model
model.save("models/fashion_mnist_model.h5")

# Evaluate the model
test_loss, test_acc = model.evaluate(test_images, test_labels_categ)
print(f"Test Accuracy: {test_acc:.4f}")

